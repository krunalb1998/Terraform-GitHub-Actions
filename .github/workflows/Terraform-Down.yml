name: Terraform-Down

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
   inputs:
    env:
        type: choice
        description: 'Env'
        required: true
        options:
          - test
    

env:
  TERRAFORM_VERSION: 1.1.6
  AWS_REGION: eu-central-1

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          #role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/platform/ALZP-WL-Owner
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Down
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: terraform destroy -auto-approve -input=false
